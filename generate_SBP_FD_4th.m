function [H,D] = generate_SBP_FD_4th(Bs,dx)

    %% Generate Q
    Q = zeros(Bs,Bs);
    Q(1,1) = -24/17*(17/48);
    Q(1,2) = 59/34*(17/48);
    Q(1,3) = -4/17*(17/48);
    Q(1,4) = -3/34*(17/48);
    
    Q(2,1) = -1/2*(59/48);
    Q(2,3) = 1/2*(59/48);
    
    Q(3,1) = 4/43*(43/48);
    Q(3,2) = -59/86*(43/48);
    Q(3,4) = 59/86*(43/48);
    Q(3,5) = -4/43*(43/48);
    
    Q(4,1) = 3/98*(49/48);
    Q(4,3) = -59/98*(49/48);
    Q(4,5) = 32/49*(49/48);
    Q(4,6) = -4/49*(49/48);
    
    
    for i = 5:Bs-4
        Q(i,i-2) = 1/12;
        Q(i,i-1) = -2/3;
        Q(i,i+1) = 2/3;
        Q(i,i+2) = -1/12;
    end
    
    Q(Bs:-1:Bs-3,Bs:-1:1) = -Q(1:4,1:Bs);

    %% Generate H
    h_vec = ones(Bs,1);
    h_vec(1) = 17/48;
    h_vec(2) = 59/48;
    h_vec(3) = 43/48;
    h_vec(4) = 49/48;
    h_vec(end:-1:end-3) = h_vec(1:4);

    h_vec = dx*h_vec;
    H = sparse(diag(h_vec));
    

    %% Calculate D
    D = inv(H)*Q;

end