%% Initial Parameters
set(groot, 'defaultAxesTickLabelInterpreter','latex'); set(groot, 'defaultLegendInterpreter','latex');
Domain = [0,1;0,1];
Bs = 17;
loops = 1000;
nplot = 100;
dt = 1/1000;
% characterize the initial data (0 = sin functions, 1 = gauss blob, 2 =
% random function)
init_data = 1;

% Gauss Blob params
sigma = [0.2,0.2];
mu = [0.25,0.25];

% sine-function params
load('a_rand_50.mat')
%a = rand(30,1);

% plot parameters
c_range = [-0.1,1.1];
%c_range = [-0.3,0.5];
%c_range = [-0.05 0.05];
x_range = [Domain(1,1),Domain(1,2)];
y_range = [Domain(2,1),Domain(2,2)];

% Runge Kutta 4 method params
RK4_a = [0,1/2,1/2,1];


%% Treecode setting
% level 2
%treecode = {[0,0],[0,1],[0,2],[0,3],[1,0],[1,1],[1,2],[1,3],[2,0],[2,1],[2,2],[2,3],[3,0],[3,1],[3,2],[3,3]};

% level 2 and 3
treecode = {[0,0],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,2],[0,3],[1,0],[1,1],[1,2],[1,3],[2,0],[2,1],[2,2],[2,3],[3,0],[3,1],[3,2],[3,3]};

% level 3 and 4
%treecode = {[0,0,0],[0,0,1],[0,0,2],[0,0,3,0],[0,0,3,1],[0,0,3,2],[0,0,3,3],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[0,3,0],[0,3,1],[0,3,2],[0,3,3],[1,0,0],[1,0,1],[1,0,2],[1,0,3],[1,1,0],[1,1,1],[1,1,2],[1,1,3],[1,2,0],[1,2,1],[1,2,2],[1,2,3],[1,3,0],[1,3,1],[1,3,2],[1,3,3],[2,0,0],[2,0,1],[2,0,2],[2,0,3],[2,1,0],[2,1,1],[2,1,2],[2,1,3],[2,2,0],[2,3,0],[3,0,0],[3,1,0],[3,2,0],[3,3,0],[2,2,1],[2,3,1],[3,0,1],[3,1,1],[3,2,1],[3,3,1],[2,2,2],[2,3,2],[3,0,2],[3,1,2],[3,2,2],[3,3,2],[2,2,3],[2,3,3],[3,0,3],[3,1,3],[3,2,3],[3,3,3]};

% level 2, 3 and 4
%treecode = {[0,0,0],[0,0,1],[0,0,2],[0,0,3,0],[0,0,3,1],[0,0,3,2],[0,0,3,3],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[0,3,0],[0,3,1],[0,3,2],[0,3,3],[1,0],[1,1],[1,2],[1,3],[2,0],[2,1],[2,2],[2,3],[3,0],[3,1],[3,2],[3,3]};

% level 2, 3 and 4 with 2-level-diff over diagonal
%treecode = {[0,0,0],[0,0,1],[0,0,2],[0,0,3,0],[0,0,3,1],[0,0,3,2],[0,0,3,3],[0,1,0],[0,1,1],[0,1,2],[0,1,3],[0,2,0],[0,2,1],[0,2,2],[0,2,3],[0,3],[1,0],[1,1],[1,2],[1,3],[2,0],[2,1],[2,2],[2,3],[3,0],[3,1],[3,2],[3,3]};

% 2,3,4 and 5
%treecode = {[0,0,0],[0,0,1],[0,0,2],[0,0,3,0],[0,0,3,1],[0,0,3,2],[0,0,3,3,0],[0,0,3,3,1],[0,0,3,3,2],[0,0,3,3,3],[0,1,0],[0,1,1],[0,1,2,0],[0,1,2,1],[0,1,2,2],[0,1,2,3],[0,1,3],[0,2,0],[0,2,1,0],[0,2,1,1],[0,2,1,2],[0,2,1,3],[0,2,2],[0,2,3],[0,3,0,0],[0,3,0,1],[0,3,0,2],[0,3,0,3],[0,3,1],[0,3,2],[0,3,3],[1,0],[1,1],[1,2],[1,3],[2,0],[2,1],[2,2],[2,3],[3,0],[3,1],[3,2],[3,3]};

% 2,3,4 and 5 y-axis mirrored
%treecode = {[0,0],[0,1],[0,2],[0,3],[1,0],[1,1],[1,2],[1,3],[2,0,0],[2,0,1],[2,0,2],[2,0,3,0],[2,0,3,1],[2,0,3,2],[2,0,3,3],[2,1,0],[2,1,1],[2,1,2,0],[2,1,2,1],[2,1,2,2],[2,1,2,3],[2,1,3],[2,2,0],[2,2,1,0],[2,2,1,1,0],[2,2,1,1,1],[2,2,1,1,2],[2,2,1,1,3],[2,2,1,2],[2,2,1,3],[2,2,2],[2,2,3],[2,3,0,0],[2,3,0,1],[2,3,0,2],[2,3,0,3],[2,3,1],[2,3,2],[2,3,3],[3,0],[3,1],[3,2],[3,3]};

% 2,3,4 and 5 with two refined zones
%treecode = {[0,0,0],[0,0,1],[0,0,2],[0,0,3,0],[0,0,3,1],[0,0,3,2],[0,0,3,3,0],[0,0,3,3,1],[0,0,3,3,2],[0,0,3,3,3],[0,1,0],[0,1,1],[0,1,2,0],[0,1,2,1],[0,1,2,2],[0,1,2,3,0],[0,1,2,3,1],[0,1,2,3,2],[0,1,2,3,3],[0,1,3,0],[0,1,3,1],[0,1,3,2],[0,1,3,3],[0,2,0],[0,2,1,0],[0,2,1,1],[0,2,1,2],[0,2,1,3],[0,2,2],[0,2,3],[0,3,0,0],[0,3,0,1],[0,3,0,2],[0,3,0,3],[0,3,1,0,0],[0,3,1,0,1],[0,3,1,0,2],[0,3,1,0,3],[0,3,1,1],[0,3,1,2],[0,3,1,3],[0,3,2],[0,3,3],[1,0,0],[1,0,1],[1,0,2],[1,0,3],[1,1],[1,2,0],[1,2,1],[1,2,2],[1,2,3],[1,3],[2,0],[2,1],[2,2],[2,3],[3,0],[3,1],[3,2],[3,3]};


nblocks = size(treecode,2);  % number of blocks
maxlevel = max(cellfun(@length, treecode));
minlevel = min(cellfun(@length, treecode));
dx_fine = (Domain(1,2)-Domain(1,1))/2^maxlevel/(Bs-1);  % dx-value of finest block
CFL = dt/dx_fine    % print CFL number

% for further calculations put treecode into an array and fill empty values
% with -1
treecode_array = -ones(nblocks,maxlevel);
for block=1:nblocks
    for l=1:length(treecode{block})
        treecode_array(block,l) = treecode{block}(l);
    end
end


%% generate Data and Operators
Data = generate_Data(Domain,Bs,treecode);




%% create Plot
clear M
M(floor(loops/nplot)+1) = struct('cdata',[],'colormap',[]);
h = figure;
h.Visible = 'on';
hold on
colormap white;

for i=1:nblocks
    X = Data.X{i};
    Y = Data.Y{i};



    X_edge = [X(1,1),X(1,end);X(end,1),X(end,end)];
    Y_edge = [Y(1,1),Y(1,end);Y(end,1),Y(end,end)];
    Z_edge = zeros(2,2);
    %p2 = pcolor(X_edge,Y_edge,Z_edge);
    %set(p2,'FaceAlpha', 0, 'EdgeAlpha', '1');

    Z = zeros(Bs,Bs);
    Data.Z{i} = Z;
    %p = imagesc([X(1,1),X(end,end)],[Y(1,1),Y(end,end)],Z);
    p = pcolor(X,Y,Z);
    set(p,'FaceAlpha', 0, 'EdgeAlpha', '0.3');
    xlim(x_range)
    ylim(y_range)
end

xlabel('x','interpreter','latex')
ylabel('y','interpreter','latex')
caxis(c_range)
